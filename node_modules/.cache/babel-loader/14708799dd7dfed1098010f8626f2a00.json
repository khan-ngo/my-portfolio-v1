{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listen = listen;\nexports.unlisten = unlisten; ////////////////////////////////////////////////////////////////////////////////////////\n// Small helpers that provide an easy and effecient way to add/remove event listeners //\n////////////////////////////////////////////////////////////////////////////////////////\n\nvar elementsWithListeners = [],\n    registeredListeners = [];\n\nfunction addListener(el, event, cb) {\n  var idx = elementsWithListeners.indexOf(el);\n\n  if (idx === -1) {\n    idx = elementsWithListeners.length;\n    elementsWithListeners.push(el);\n    registeredListeners.push({\n      el: el,\n      totalCount: 0\n    });\n  }\n\n  var listeners = registeredListeners[idx],\n      listener = listeners[event];\n\n  if (!listener) {\n    listener = listeners[event] = {\n      callbacks: []\n    };\n\n    listener.cb = function (e) {\n      for (var i = 0, l = listener.callbacks.length; i < l; i += 1) {\n        listener.callbacks[i](e);\n      }\n    };\n\n    listeners.totalCount += 1;\n    listeners.el.addEventListener(event, listener.cb);\n  } // just to prevent double listeners\n\n\n  if (listener.callbacks.indexOf(cb) !== -1) {\n    return;\n  }\n\n  listener.callbacks.push(cb);\n}\n\nfunction removeListener(el, event, cb) {\n  var idx = elementsWithListeners.indexOf(el);\n\n  if (idx === -1) {\n    return;\n  }\n\n  var listeners = registeredListeners[idx],\n      listener = listeners[event],\n      callbacks = listener ? listener.callbacks : [];\n\n  if (!listener || callbacks.indexOf(cb) === -1) {\n    return;\n  }\n\n  callbacks.splice(callbacks.indexOf(cb), 1);\n\n  if (callbacks.length > 0) {\n    return;\n  }\n\n  listeners.el.removeEventListener(event, listener.cb);\n  listeners.totalCount -= 1;\n  delete listeners[event];\n\n  if (listeners.totalCount > 0) {\n    return;\n  }\n\n  elementsWithListeners.splice(idx, 1);\n  registeredListeners.splice(idx, 1);\n}\n/**\n * Subscribe cb to events list\n * @param  {HTMLElement}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be called\n */\n\n\nfunction listen(el, events, cb) {\n  for (var i = 0, l = events.length; i < l; i += 1) {\n    addListener(el, events[i], cb);\n  }\n}\n/**\n * Unsubscribe cb from events list\n * @param  {HTMLElement}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be unsubscribed\n */\n\n\nfunction unlisten(el, events, cb) {\n  for (var i = 0, l = events.length; i < l; i += 1) {\n    removeListener(el, events[i], cb);\n  }\n}","map":{"version":3,"sources":["/Users/kqngo/Coding/javascript/profiled/my-site/my-portofolio-v1/node_modules/react-sticky-el/lib/helpers/events.js"],"names":["Object","defineProperty","exports","value","listen","unlisten","elementsWithListeners","registeredListeners","addListener","el","event","cb","idx","indexOf","length","push","totalCount","listeners","listener","callbacks","e","i","l","addEventListener","removeListener","splice","removeEventListener","events"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listen = listen;\nexports.unlisten = unlisten;\n////////////////////////////////////////////////////////////////////////////////////////\n// Small helpers that provide an easy and effecient way to add/remove event listeners //\n////////////////////////////////////////////////////////////////////////////////////////\n\nvar elementsWithListeners = [],\n    registeredListeners = [];\n\nfunction addListener(el, event, cb) {\n  var idx = elementsWithListeners.indexOf(el);\n  if (idx === -1) {\n    idx = elementsWithListeners.length;\n    elementsWithListeners.push(el);\n    registeredListeners.push({ el: el, totalCount: 0 });\n  }\n\n  var listeners = registeredListeners[idx],\n      listener = listeners[event];\n\n  if (!listener) {\n    listener = listeners[event] = { callbacks: [] };\n    listener.cb = function (e) {\n      for (var i = 0, l = listener.callbacks.length; i < l; i += 1) {\n        listener.callbacks[i](e);\n      }\n    };\n    listeners.totalCount += 1;\n    listeners.el.addEventListener(event, listener.cb);\n  }\n\n  // just to prevent double listeners\n  if (listener.callbacks.indexOf(cb) !== -1) {\n    return;\n  }\n\n  listener.callbacks.push(cb);\n}\n\nfunction removeListener(el, event, cb) {\n  var idx = elementsWithListeners.indexOf(el);\n  if (idx === -1) {\n    return;\n  }\n\n  var listeners = registeredListeners[idx],\n      listener = listeners[event],\n      callbacks = listener ? listener.callbacks : [];\n\n  if (!listener || callbacks.indexOf(cb) === -1) {\n    return;\n  }\n\n  callbacks.splice(callbacks.indexOf(cb), 1);\n  if (callbacks.length > 0) {\n    return;\n  }\n\n  listeners.el.removeEventListener(event, listener.cb);\n  listeners.totalCount -= 1;\n  delete listeners[event];\n\n  if (listeners.totalCount > 0) {\n    return;\n  }\n\n  elementsWithListeners.splice(idx, 1);\n  registeredListeners.splice(idx, 1);\n}\n\n/**\n * Subscribe cb to events list\n * @param  {HTMLElement}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be called\n */\nfunction listen(el, events, cb) {\n  for (var i = 0, l = events.length; i < l; i += 1) {\n    addListener(el, events[i], cb);\n  }\n}\n\n/**\n * Unsubscribe cb from events list\n * @param  {HTMLElement}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be unsubscribed\n */\n\nfunction unlisten(el, events, cb) {\n  for (var i = 0, l = events.length; i < l; i += 1) {\n    removeListener(el, events[i], cb);\n  }\n}"]},"metadata":{},"sourceType":"script"}