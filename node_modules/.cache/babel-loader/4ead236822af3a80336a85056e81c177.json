{"ast":null,"code":"/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.PDFObject = factory();\n  }\n})(this, function () {\n  \"use strict\"; //jshint unused:true\n  //PDFObject is designed for client-side (browsers), not server-side (node)\n  //Will choke on undefined navigator and window vars when run on server\n  //Return boolean false and exit function when running server-side\n\n  if (typeof window === \"undefined\" || typeof navigator === \"undefined\") {\n    return false;\n  }\n\n  var pdfobjectversion = \"2.1.1\",\n      ua = window.navigator.userAgent,\n      //declare booleans\n  supportsPDFs,\n      isIE,\n      supportsPdfMimeType = typeof navigator.mimeTypes['application/pdf'] !== \"undefined\",\n      supportsPdfActiveX,\n      isModernBrowser = function () {\n    return typeof window.Promise !== \"undefined\";\n  }(),\n      isFirefox = function () {\n    return ua.indexOf(\"irefox\") !== -1;\n  }(),\n      isFirefoxWithPDFJS = function () {\n    //Firefox started shipping PDF.js in Firefox 19.\n    //If this is Firefox 19 or greater, assume PDF.js is available\n    if (!isFirefox) {\n      return false;\n    } //parse userAgent string to get release version (\"rv\")\n    //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n\n\n    return parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18;\n  }(),\n      isIOS = function () {\n    return /iphone|ipad|ipod/i.test(ua.toLowerCase());\n  }(),\n      //declare functions\n  createAXO,\n      buildFragmentString,\n      log,\n      embedError,\n      _embed,\n      getTargetElement,\n      generatePDFJSiframe,\n      generateEmbedElement;\n  /* ----------------------------------------------------\n     Supporting functions\n     ---------------------------------------------------- */\n\n\n  createAXO = function createAXO(type) {\n    var ax;\n\n    try {\n      ax = new ActiveXObject(type);\n    } catch (e) {\n      ax = null; //ensure ax remains null\n    }\n\n    return ax;\n  }; //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n  //window.ActiveXObject the same way previous versions of IE did\n  //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n  //so check the first one for older IE, and the second for IE11\n  //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n  //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n\n\n  isIE = function isIE() {\n    return !!(window.ActiveXObject || \"ActiveXObject\" in window);\n  }; //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n  //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n\n\n  supportsPdfActiveX = function supportsPdfActiveX() {\n    return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\"));\n  }; //Determines whether PDF support is available\n\n\n  supportsPDFs = //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n  //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n  //Therefore if iOS, we shall assume that PDF support is not available\n  !isIOS && ( //Modern versions of Firefox come bundled with PDFJS\n  isFirefoxWithPDFJS || //Browsers that still support the original MIME type check\n  supportsPdfMimeType || //Pity the poor souls still using IE\n  isIE() && supportsPdfActiveX()); //Create a fragment identifier for using PDF Open parameters when embedding PDF\n\n  buildFragmentString = function buildFragmentString(pdfParams) {\n    var string = \"\",\n        prop;\n\n    if (pdfParams) {\n      for (prop in pdfParams) {\n        if (pdfParams.hasOwnProperty(prop)) {\n          string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n        }\n      } //The string will be empty if no PDF Params found\n\n\n      if (string) {\n        string = \"#\" + string; //Remove last ampersand\n\n        string = string.slice(0, string.length - 1);\n      }\n    }\n\n    return string;\n  };\n\n  log = function log(msg) {\n    if (typeof console !== \"undefined\" && console.log) {\n      console.log(\"[PDFObject] \" + msg);\n    }\n  };\n\n  embedError = function embedError(msg) {\n    log(msg);\n    return false;\n  };\n\n  getTargetElement = function getTargetElement(targetSelector) {\n    //Default to body for full-browser PDF\n    var targetNode = document.body; //If a targetSelector is specified, check to see whether\n    //it's passing a selector, jQuery object, or an HTML element\n\n    if (typeof targetSelector === \"string\") {\n      //Is CSS selector\n      targetNode = document.querySelector(targetSelector);\n    } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n      //Is jQuery element. Extract HTML node\n      targetNode = targetSelector.get(0);\n    } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1) {\n      //Is HTML element\n      targetNode = targetSelector;\n    }\n\n    return targetNode;\n  };\n\n  generatePDFJSiframe = function generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id) {\n    var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n    var scrollfix = isIOS ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n    var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n    targetNode.className += \" pdfobject-container\";\n    targetNode.style.position = \"relative\";\n    targetNode.style.overflow = \"auto\";\n    targetNode.innerHTML = iframe;\n    return targetNode.getElementsByTagName(\"iframe\")[0];\n  };\n\n  generateEmbedElement = function generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id) {\n    var style = \"\";\n\n    if (targetSelector && targetSelector !== document.body) {\n      style = \"width: \" + width + \"; height: \" + height + \";\";\n    } else {\n      style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n    }\n\n    targetNode.className += \" pdfobject-container\";\n    targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n    return targetNode.getElementsByTagName(\"embed\")[0];\n  };\n\n  _embed = function embed(url, targetSelector, options) {\n    //Ensure URL is available. If not, exit now.\n    if (typeof url !== \"string\") {\n      return embedError(\"URL is not valid\");\n    } //If targetSelector is not defined, convert to boolean\n\n\n    targetSelector = typeof targetSelector !== \"undefined\" ? targetSelector : false; //Ensure options object is not undefined -- enables easier error checking below\n\n    options = typeof options !== \"undefined\" ? options : {}; //Get passed options, or set reasonable defaults\n\n    var id = options.id && typeof options.id === \"string\" ? \"id='\" + options.id + \"'\" : \"\",\n        page = options.page ? options.page : false,\n        pdfOpenParams = options.pdfOpenParams ? options.pdfOpenParams : {},\n        fallbackLink = typeof options.fallbackLink !== \"undefined\" ? options.fallbackLink : true,\n        width = options.width ? options.width : \"100%\",\n        height = options.height ? options.height : \"100%\",\n        assumptionMode = typeof options.assumptionMode === \"boolean\" ? options.assumptionMode : true,\n        forcePDFJS = typeof options.forcePDFJS === \"boolean\" ? options.forcePDFJS : false,\n        PDFJS_URL = options.PDFJS_URL ? options.PDFJS_URL : false,\n        targetNode = getTargetElement(targetSelector),\n        fallbackHTML = \"\",\n        pdfOpenFragment = \"\",\n        fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\"; //If target element is specified but is not valid, exit without doing anything\n\n    if (!targetNode) {\n      return embedError(\"Target element cannot be determined\");\n    } //page option overrides pdfOpenParams, if found\n\n\n    if (page) {\n      pdfOpenParams.page = page;\n    } //Stringify optional Adobe params for opening document (as fragment identifier)\n\n\n    pdfOpenFragment = buildFragmentString(pdfOpenParams); //Do the dance\n    //If the forcePDFJS option is invoked, skip everything else and embed as directed\n\n    if (forcePDFJS && PDFJS_URL) {\n      return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id); //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n    } else if (supportsPDFs || assumptionMode && isModernBrowser && !isIOS) {\n      return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id); //If everything else has failed and a PDFJS fallback is provided, try to use it\n    } else if (PDFJS_URL) {\n      return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n    } else {\n      //Display the fallback link if available\n      if (fallbackLink) {\n        fallbackHTML = typeof fallbackLink === \"string\" ? fallbackLink : fallbackHTML_default;\n        targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n      }\n\n      return embedError(\"This browser does not support embedded PDFs\");\n    }\n  };\n\n  return {\n    embed: function embed(a, b, c) {\n      return _embed(a, b, c);\n    },\n    pdfobjectversion: function () {\n      return pdfobjectversion;\n    }(),\n    supportsPDFs: function () {\n      return supportsPDFs;\n    }()\n  };\n});","map":{"version":3,"sources":["/Users/kqngo/Coding/javascript/profiled/my-site/my-portofolio-v1/node_modules/pdfobject/pdfobject.js"],"names":["root","factory","define","amd","module","exports","PDFObject","window","navigator","pdfobjectversion","ua","userAgent","supportsPDFs","isIE","supportsPdfMimeType","mimeTypes","supportsPdfActiveX","isModernBrowser","Promise","isFirefox","indexOf","isFirefoxWithPDFJS","parseInt","split","isIOS","test","toLowerCase","createAXO","buildFragmentString","log","embedError","embed","getTargetElement","generatePDFJSiframe","generateEmbedElement","type","ax","ActiveXObject","e","pdfParams","string","prop","hasOwnProperty","encodeURIComponent","slice","length","msg","console","targetSelector","targetNode","document","body","querySelector","jQuery","get","nodeType","url","pdfOpenFragment","PDFJS_URL","id","fullURL","scrollfix","iframe","className","style","position","overflow","innerHTML","getElementsByTagName","width","height","options","page","pdfOpenParams","fallbackLink","assumptionMode","forcePDFJS","fallbackHTML","fallbackHTML_default","replace","a","b","c"],"mappings":"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","sourcesContent":["/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));"]},"metadata":{},"sourceType":"script"}